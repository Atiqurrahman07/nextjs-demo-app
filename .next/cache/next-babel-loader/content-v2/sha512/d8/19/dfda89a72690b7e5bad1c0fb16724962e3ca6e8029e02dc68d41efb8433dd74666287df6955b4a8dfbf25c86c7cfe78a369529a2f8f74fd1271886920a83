{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"E:\\\\reactjs\\\\nextjs-bigger-project\\\\pages\\\\[meetupId]\\\\index.js\";\nimport { useRouter } from \"next/router\";\nimport { MongoClient, ObjectId } from 'mongodb';\nimport React from \"react\";\nimport Head from 'next/head';\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\n\nfunction MeetupDetails(props) {\n  const router = useRouter();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: [/*#__PURE__*/_jsxDEV(\"title\", {\n        children: props.meetupData.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        name: props.meetupData.description,\n        content: \"Visit your meetup list\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(MeetupDetail, {\n      image: props.meetupData.image,\n      title: props.meetupData.title,\n      address: props.meetupData.address,\n      description: props.meetupData.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect(\"mongodb+srv://ATIQURRAHMAN:yAP2S54kd6GktAKb@cluster0.ceo0cji.mongodb.net/meetups?retryWrites=true&w=majority\"); // mongoclint is use for connect data with database\n\n  const db = client.db();\n  const meetupCollection = db.collection(\"ateeq\");\n  const meetups = await meetupCollection.find({}, {\n    _id: 1\n  }).toArray();\n  client.close();\n  return {\n    fallback: false,\n    paths: meetups.map(meetup => ({\n      params: {\n        meetupId: meetup._id.toString()\n      }\n    }))\n  };\n}\nexport async function getStaticProps(context) {\n  //fetch data for single meetup\n  const meetupId = context.params.meetupId; //   console.log(meetupId);\n\n  const client = await MongoClient.connect(\"mongodb+srv://ATIQURRAHMAN:yAP2S54kd6GktAKb@cluster0.ceo0cji.mongodb.net/meetups?retryWrites=true&w=majority\"); // mongoclint is use for connect data with database\n\n  const db = client.db();\n  const meetupCollection = db.collection(\"ateeq\");\n  const selelectedMeetup = await meetupCollection.findOne({\n    _id: ObjectId(meetupId)\n  });\n  client.close();\n  return {\n    props: {\n      meetupData: {\n        id: selelectedMeetup._id.toString(),\n        title: selelectedMeetup.title,\n        address: selelectedMeetup.address,\n        image: selelectedMeetup.image,\n        description: selelectedMeetup.description\n      }\n    }\n  };\n}\nexport default MeetupDetails;","map":{"version":3,"sources":["E:/reactjs/nextjs-bigger-project/pages/[meetupId]/index.js"],"names":["useRouter","MongoClient","ObjectId","React","Head","MeetupDetail","MeetupDetails","props","router","meetupData","title","description","image","address","getStaticPaths","client","connect","db","meetupCollection","collection","meetups","find","_id","toArray","close","fallback","paths","map","meetup","params","meetupId","toString","getStaticProps","context","selelectedMeetup","findOne","id"],"mappings":"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","sourcesContent":["import { useRouter } from \"next/router\";\r\nimport {MongoClient,ObjectId} from 'mongodb'\r\nimport React from \"react\";\r\nimport Head from 'next/head'\r\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\r\n\r\nfunction MeetupDetails(props) {\r\n  const router = useRouter();\r\n  return (<>\r\n   <Head>\r\n        <title>{props.meetupData.title}</title>\r\n        <meta\r\n        name={props.meetupData.description}\r\n        content='Visit your meetup list'\r\n        />\r\n    </Head>\r\n    <MeetupDetail\r\n      image={props.meetupData.image}\r\n      title={props.meetupData.title}\r\n      address={props.meetupData.address}\r\n      description={props.meetupData.description}\r\n    /></>\r\n  );\r\n}\r\n\r\nexport async function getStaticPaths() {\r\n   const client = await MongoClient.connect(\r\n      \"mongodb+srv://ATIQURRAHMAN:yAP2S54kd6GktAKb@cluster0.ceo0cji.mongodb.net/meetups?retryWrites=true&w=majority\");\r\n    // mongoclint is use for connect data with database\r\n    \r\n    const db = client.db();\r\n    const meetupCollection = db.collection(\"ateeq\"); \r\n\r\n    const meetups = await meetupCollection.find({},{_id:1}).toArray();\r\n\r\n    client.close();\r\n\r\n  return {\r\n   fallback:false,\r\n    paths:meetups.map( meetup =>({\r\n      params:{meetupId: meetup._id.toString()}\r\n    })),\r\n    \r\n    \r\n  };\r\n}\r\n\r\nexport async function getStaticProps(context) {\r\n\r\n  //fetch data for single meetup\r\n  const meetupId = context.params.meetupId;\r\n//   console.log(meetupId);\r\n  const client = await MongoClient.connect(\r\n   \"mongodb+srv://ATIQURRAHMAN:yAP2S54kd6GktAKb@cluster0.ceo0cji.mongodb.net/meetups?retryWrites=true&w=majority\");\r\n // mongoclint is use for connect data with database\r\n \r\n const db = client.db();\r\n const meetupCollection = db.collection(\"ateeq\"); \r\n\r\n\r\n const selelectedMeetup =await meetupCollection.findOne({_id:ObjectId(meetupId)});\r\n\r\n client.close();\r\n  return {\r\n    props: {\r\n      meetupData:{\r\n         id:selelectedMeetup._id.toString(),\r\n         title:selelectedMeetup.title,\r\n         address:selelectedMeetup.address,\r\n         image:selelectedMeetup.image,\r\n         description:selelectedMeetup.description,\r\n      }\r\n    },\r\n  };\r\n}\r\n\r\nexport default MeetupDetails;\r\n"]},"metadata":{},"sourceType":"module"}