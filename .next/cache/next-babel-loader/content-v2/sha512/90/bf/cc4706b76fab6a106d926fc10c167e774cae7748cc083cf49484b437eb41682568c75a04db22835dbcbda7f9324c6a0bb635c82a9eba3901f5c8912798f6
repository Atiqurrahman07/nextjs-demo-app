{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"E:\\\\reactjs\\\\nextjs-bigger-project\\\\pages\\\\[meetupId]\\\\index.js\";\nimport { useRouter } from \"next/router\";\nimport { MongoClient } from 'mongodb';\nimport React from \"react\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\n\nfunction MeetupDetails() {\n  const router = useRouter();\n  return /*#__PURE__*/_jsxDEV(MeetupDetail, {\n    image: \"https://upload.wikimedia.org/wikipedia/commons/thumb/2/2e/M%C3%BCnchen_Blick_vom_Neuen_Rathaus_zu_St_Peter_September_2017.jpg/2560px-M%C3%BCnchen_Blick_vom_Neuen_Rathaus_zu_St_Peter_September_2017.jpg\",\n    title: \"Frist Meetup\",\n    address: \"some city streat 5\",\n    description: \"this is frist meetup\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n}\n\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect(\"mongodb+srv://ATIQURRAHMAN:yAP2S54kd6GktAKb@cluster0.ceo0cji.mongodb.net/meetups?retryWrites=true&w=majority\"); // mongoclint is use for connect data with database\n\n  const db = client.db();\n  const meetupCollection = db.collection(\"ateeq\");\n  const meetups = await meetupCollection.find({}, {\n    _id: 1\n  }).toArray();\n  client.close();\n  return {\n    fallback: false,\n    paths: meetups.map(meetup => ({\n      params: {\n        meetupId: meetup._id.toString()\n      }\n    }))\n  };\n}\nexport async function getStaticProps(context) {\n  //fetch data for single meetup\n  const meetupId = context.params.meetupId; //   console.log(meetupId);\n\n  const client = await MongoClient.connect(\"mongodb+srv://ATIQURRAHMAN:yAP2S54kd6GktAKb@cluster0.ceo0cji.mongodb.net/meetups?retryWrites=true&w=majority\"); // mongoclint is use for connect data with database\n\n  const db = client.db();\n  const meetupCollection = db.collection(\"ateeq\");\n  const selelectedMeetup = await meetupCollection.findOne({\n    _id: meetupId\n  });\n  client.close();\n  return {\n    props: {\n      meetupData: selelectedMeetup\n    }\n  };\n}\nexport default MeetupDetails;","map":{"version":3,"sources":["E:/reactjs/nextjs-bigger-project/pages/[meetupId]/index.js"],"names":["useRouter","MongoClient","React","MeetupDetail","MeetupDetails","router","getStaticPaths","client","connect","db","meetupCollection","collection","meetups","find","_id","toArray","close","fallback","paths","map","meetup","params","meetupId","toString","getStaticProps","context","selelectedMeetup","findOne","props","meetupData"],"mappings":";;AAAA,SAASA,SAAT,QAA0B,aAA1B;AACA,SAAQC,WAAR,QAA0B,SAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,uCAAzB;;AAEA,SAASC,aAAT,GAAyB;AACvB,QAAMC,MAAM,GAAGL,SAAS,EAAxB;AACA,sBACE,QAAC,YAAD;AACE,IAAA,KAAK,EAAC,0MADR;AAEE,IAAA,KAAK,EAAC,cAFR;AAGE,IAAA,OAAO,EAAC,oBAHV;AAIE,IAAA,WAAW,EAAC;AAJd;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;AAED,OAAO,eAAeM,cAAf,GAAgC;AACpC,QAAMC,MAAM,GAAG,MAAMN,WAAW,CAACO,OAAZ,CAClB,8GADkB,CAArB,CADoC,CAGnC;;AAEA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AACA,QAAMC,gBAAgB,GAAGD,EAAE,CAACE,UAAH,CAAc,OAAd,CAAzB;AAEA,QAAMC,OAAO,GAAG,MAAMF,gBAAgB,CAACG,IAAjB,CAAsB,EAAtB,EAAyB;AAACC,IAAAA,GAAG,EAAC;AAAL,GAAzB,EAAkCC,OAAlC,EAAtB;AAEAR,EAAAA,MAAM,CAACS,KAAP;AAEF,SAAO;AACNC,IAAAA,QAAQ,EAAC,KADH;AAELC,IAAAA,KAAK,EAACN,OAAO,CAACO,GAAR,CAAaC,MAAM,KAAI;AAC3BC,MAAAA,MAAM,EAAC;AAACC,QAAAA,QAAQ,EAAEF,MAAM,CAACN,GAAP,CAAWS,QAAX;AAAX;AADoB,KAAJ,CAAnB;AAFD,GAAP;AAQD;AAED,OAAO,eAAeC,cAAf,CAA8BC,OAA9B,EAAuC;AAE5C;AACA,QAAMH,QAAQ,GAAGG,OAAO,CAACJ,MAAR,CAAeC,QAAhC,CAH4C,CAI9C;;AACE,QAAMf,MAAM,GAAG,MAAMN,WAAW,CAACO,OAAZ,CACpB,8GADoB,CAArB,CAL4C,CAO7C;;AAEA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AACA,QAAMC,gBAAgB,GAAGD,EAAE,CAACE,UAAH,CAAc,OAAd,CAAzB;AAGA,QAAMe,gBAAgB,GAAE,MAAMhB,gBAAgB,CAACiB,OAAjB,CAAyB;AAACb,IAAAA,GAAG,EAACQ;AAAL,GAAzB,CAA9B;AAEAf,EAAAA,MAAM,CAACS,KAAP;AACC,SAAO;AACLY,IAAAA,KAAK,EAAE;AACLC,MAAAA,UAAU,EAACH;AADN;AADF,GAAP;AAKD;AAED,eAAetB,aAAf","sourcesContent":["import { useRouter } from \"next/router\";\r\nimport {MongoClient} from 'mongodb'\r\nimport React from \"react\";\r\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\r\n\r\nfunction MeetupDetails() {\r\n  const router = useRouter();\r\n  return (\r\n    <MeetupDetail\r\n      image=\"https://upload.wikimedia.org/wikipedia/commons/thumb/2/2e/M%C3%BCnchen_Blick_vom_Neuen_Rathaus_zu_St_Peter_September_2017.jpg/2560px-M%C3%BCnchen_Blick_vom_Neuen_Rathaus_zu_St_Peter_September_2017.jpg\"\r\n      title=\"Frist Meetup\"\r\n      address=\"some city streat 5\"\r\n      description=\"this is frist meetup\"\r\n    />\r\n  );\r\n}\r\n\r\nexport async function getStaticPaths() {\r\n   const client = await MongoClient.connect(\r\n      \"mongodb+srv://ATIQURRAHMAN:yAP2S54kd6GktAKb@cluster0.ceo0cji.mongodb.net/meetups?retryWrites=true&w=majority\");\r\n    // mongoclint is use for connect data with database\r\n    \r\n    const db = client.db();\r\n    const meetupCollection = db.collection(\"ateeq\"); \r\n\r\n    const meetups = await meetupCollection.find({},{_id:1}).toArray();\r\n\r\n    client.close();\r\n\r\n  return {\r\n   fallback:false,\r\n    paths:meetups.map( meetup =>({\r\n      params:{meetupId: meetup._id.toString()}\r\n    })),\r\n    \r\n    \r\n  };\r\n}\r\n\r\nexport async function getStaticProps(context) {\r\n\r\n  //fetch data for single meetup\r\n  const meetupId = context.params.meetupId;\r\n//   console.log(meetupId);\r\n  const client = await MongoClient.connect(\r\n   \"mongodb+srv://ATIQURRAHMAN:yAP2S54kd6GktAKb@cluster0.ceo0cji.mongodb.net/meetups?retryWrites=true&w=majority\");\r\n // mongoclint is use for connect data with database\r\n \r\n const db = client.db();\r\n const meetupCollection = db.collection(\"ateeq\"); \r\n\r\n\r\n const selelectedMeetup =await meetupCollection.findOne({_id:meetupId});\r\n\r\n client.close();\r\n  return {\r\n    props: {\r\n      meetupData:selelectedMeetup\r\n    },\r\n  };\r\n}\r\n\r\nexport default MeetupDetails;\r\n"]},"metadata":{},"sourceType":"module"}