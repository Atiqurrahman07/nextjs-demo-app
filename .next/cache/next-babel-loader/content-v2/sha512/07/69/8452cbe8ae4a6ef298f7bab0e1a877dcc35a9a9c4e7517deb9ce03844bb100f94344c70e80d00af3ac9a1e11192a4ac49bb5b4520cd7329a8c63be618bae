{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"E:\\\\reactjs\\\\nextjs-bigger-project\\\\pages\\\\[meetupId]\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport { useRouter } from \"next/router\";\nimport React from \"react\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\n\nfunction MeetupDetails(props) {\n  _s();\n\n  var router = useRouter();\n  return /*#__PURE__*/_jsxDEV(MeetupDetail, {\n    image: props.meetupData.image,\n    title: props.meetupData.title,\n    address: props.meetupData.address,\n    description: props.meetupData.description\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MeetupDetails, \"fN7XvhJ+p5oE6+Xlo0NJmXpxjC8=\", false, function () {\n  return [useRouter];\n});\n\n_c = MeetupDetails;\nexport var __N_SSG = true;\nexport default MeetupDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"MeetupDetails\");","map":{"version":3,"sources":["E:/reactjs/nextjs-bigger-project/pages/[meetupId]/index.js"],"names":["useRouter","React","MeetupDetail","MeetupDetails","props","router","meetupData","image","title","address","description"],"mappings":";;;;;AAAA,SAASA,SAAT,QAA0B,aAA1B;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,uCAAzB;;AAEA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAAA;;AAC5B,MAAMC,MAAM,GAAGL,SAAS,EAAxB;AACA,sBACE,QAAC,YAAD;AACE,IAAA,KAAK,EAAEI,KAAK,CAACE,UAAN,CAAiBC,KAD1B;AAEE,IAAA,KAAK,EAAEH,KAAK,CAACE,UAAN,CAAiBE,KAF1B;AAGE,IAAA,OAAO,EAAEJ,KAAK,CAACE,UAAN,CAAiBG,OAH5B;AAIE,IAAA,WAAW,EAAEL,KAAK,CAACE,UAAN,CAAiBI;AAJhC;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;GAVQP,a;UACQH,S;;;KADRG,a;;AAyDT,eAAeA,aAAf","sourcesContent":["import { useRouter } from \"next/router\";\r\nimport {MongoClient} from 'mongodb'\r\nimport React from \"react\";\r\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\r\n\r\nfunction MeetupDetails(props) {\r\n  const router = useRouter();\r\n  return (\r\n    <MeetupDetail\r\n      image={props.meetupData.image}\r\n      title={props.meetupData.title}\r\n      address={props.meetupData.address}\r\n      description={props.meetupData.description}\r\n    />\r\n  );\r\n}\r\n\r\nexport async function getStaticPaths() {\r\n   const client = await MongoClient.connect(\r\n      \"mongodb+srv://ATIQURRAHMAN:yAP2S54kd6GktAKb@cluster0.ceo0cji.mongodb.net/meetups?retryWrites=true&w=majority\");\r\n    // mongoclint is use for connect data with database\r\n    \r\n    const db = client.db();\r\n    const meetupCollection = db.collection(\"ateeq\"); \r\n\r\n    const meetups = await meetupCollection.find({},{_id:1}).toArray();\r\n\r\n    client.close();\r\n\r\n  return {\r\n   fallback:false,\r\n    paths:meetups.map( meetup =>({\r\n      params:{meetupId: meetup._id.toString()}\r\n    })),\r\n    \r\n    \r\n  };\r\n}\r\n\r\nexport async function getStaticProps(context) {\r\n\r\n  //fetch data for single meetup\r\n  const meetupId = context.params.meetupId;\r\n//   console.log(meetupId);\r\n  const client = await MongoClient.connect(\r\n   \"mongodb+srv://ATIQURRAHMAN:yAP2S54kd6GktAKb@cluster0.ceo0cji.mongodb.net/meetups?retryWrites=true&w=majority\");\r\n // mongoclint is use for connect data with database\r\n \r\n const db = client.db();\r\n const meetupCollection = db.collection(\"ateeq\"); \r\n\r\n\r\n const selelectedMeetup =await meetupCollection.findOne({_id:meetupId});\r\n\r\n client.close();\r\n  return {\r\n    props: {\r\n      meetupData:selelectedMeetup\r\n    },\r\n  };\r\n}\r\n\r\nexport default MeetupDetails;\r\n"]},"metadata":{},"sourceType":"module"}